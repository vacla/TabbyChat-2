buildscript {
    repositories {
        jcenter()    
        maven {
            name = "Fabric"
            url = "https://maven.fabricmc.net/"
        }
    }
    dependencies {
        classpath 'net.fabricmc:fabric-loom:0.4-SNAPSHOT'
    }
}

apply plugin: "fabric-loom"
apply plugin: "com.github.johnrengelman.shadow"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

minecraft {
    ext.mod_version = config.mod_version
    
    if(mod_version.endsWith('-dev')){
        mod_version = mod_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }
}


dependencies {
    minecraft "net.minecraft:minecraft:" + config.minecraft_version
    mappings "net.fabricmc:yarn:" + config.mappings_version + ":v2"
    modCompile "net.fabricmc:fabric-loader:" + config.fabric_loader_version

    modCompile "io.github.prospector:modmenu:" + config.mod_menu_version

    implementation "net.sf.jazzy:jazzy:0.5.2-rtext-1.4.1-2"
    include "net.sf.jazzy:jazzy:0.5.2-rtext-1.4.1-2"

    testImplementation "junit:junit:4.12"
}

group = config.group + "." +config.mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_file_name + '-' + config.minecraft_version_out
version = project.minecraft.mod_version

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.encoding = 'UTF-8'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.minecraft.mod_version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "mod_version": project.minecraft.mod_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}